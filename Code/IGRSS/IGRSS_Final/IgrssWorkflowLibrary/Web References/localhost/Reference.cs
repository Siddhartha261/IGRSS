//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace IGRSS.Workflows.localhost {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="StampDutyCalculatorSoap", Namespace="http://Igrss.org/Services/StampDutyCalculator/")]
    public partial class StampDutyCalculator : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CalculateStampDutyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public StampDutyCalculator() {
            this.Url = global::IGRSS.Workflows.Properties.Settings.Default.IgrssWorkflowLibrary_localhost_StampDutyCalculator;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CalculateStampDutyCompletedEventHandler CalculateStampDutyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Igrss.org/Services/StampDutyCalculator/CalculateStampDuty", RequestNamespace="http://Igrss.org/Services/StampDutyCalculator/", ResponseNamespace="http://Igrss.org/Services/StampDutyCalculator/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ValuationReport CalculateStampDuty(
                    string DistCode, 
                    string TalukaCode, 
                    string VillageID, 
                    string SurveyNo, 
                    double AreaOfLand, 
                    double PlinthAreaOfConstruction, 
                    double PriceOfLand, 
                    double CompoundWall, 
                    double Derange, 
                    double CompoundLight, 
                    double InternalRoad, 
                    double LifeInYears, 
                    double SupervisionFees, 
                    double ConnectionFees, 
                    double ArchitectFees, 
                    double ElectrificationExpenses, 
                    double LiftExpenses, 
                    ConstructionTypes TypeOfConstruction) {
            object[] results = this.Invoke("CalculateStampDuty", new object[] {
                        DistCode,
                        TalukaCode,
                        VillageID,
                        SurveyNo,
                        AreaOfLand,
                        PlinthAreaOfConstruction,
                        PriceOfLand,
                        CompoundWall,
                        Derange,
                        CompoundLight,
                        InternalRoad,
                        LifeInYears,
                        SupervisionFees,
                        ConnectionFees,
                        ArchitectFees,
                        ElectrificationExpenses,
                        LiftExpenses,
                        TypeOfConstruction});
            return ((ValuationReport)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateStampDutyAsync(
                    string DistCode, 
                    string TalukaCode, 
                    string VillageID, 
                    string SurveyNo, 
                    double AreaOfLand, 
                    double PlinthAreaOfConstruction, 
                    double PriceOfLand, 
                    double CompoundWall, 
                    double Derange, 
                    double CompoundLight, 
                    double InternalRoad, 
                    double LifeInYears, 
                    double SupervisionFees, 
                    double ConnectionFees, 
                    double ArchitectFees, 
                    double ElectrificationExpenses, 
                    double LiftExpenses, 
                    ConstructionTypes TypeOfConstruction) {
            this.CalculateStampDutyAsync(DistCode, TalukaCode, VillageID, SurveyNo, AreaOfLand, PlinthAreaOfConstruction, PriceOfLand, CompoundWall, Derange, CompoundLight, InternalRoad, LifeInYears, SupervisionFees, ConnectionFees, ArchitectFees, ElectrificationExpenses, LiftExpenses, TypeOfConstruction, null);
        }
        
        /// <remarks/>
        public void CalculateStampDutyAsync(
                    string DistCode, 
                    string TalukaCode, 
                    string VillageID, 
                    string SurveyNo, 
                    double AreaOfLand, 
                    double PlinthAreaOfConstruction, 
                    double PriceOfLand, 
                    double CompoundWall, 
                    double Derange, 
                    double CompoundLight, 
                    double InternalRoad, 
                    double LifeInYears, 
                    double SupervisionFees, 
                    double ConnectionFees, 
                    double ArchitectFees, 
                    double ElectrificationExpenses, 
                    double LiftExpenses, 
                    ConstructionTypes TypeOfConstruction, 
                    object userState) {
            if ((this.CalculateStampDutyOperationCompleted == null)) {
                this.CalculateStampDutyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateStampDutyOperationCompleted);
            }
            this.InvokeAsync("CalculateStampDuty", new object[] {
                        DistCode,
                        TalukaCode,
                        VillageID,
                        SurveyNo,
                        AreaOfLand,
                        PlinthAreaOfConstruction,
                        PriceOfLand,
                        CompoundWall,
                        Derange,
                        CompoundLight,
                        InternalRoad,
                        LifeInYears,
                        SupervisionFees,
                        ConnectionFees,
                        ArchitectFees,
                        ElectrificationExpenses,
                        LiftExpenses,
                        TypeOfConstruction}, this.CalculateStampDutyOperationCompleted, userState);
        }
        
        private void OnCalculateStampDutyOperationCompleted(object arg) {
            if ((this.CalculateStampDutyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateStampDutyCompleted(this, new CalculateStampDutyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IGRSS.org/ConstructionTypes")]
    public enum ConstructionTypes {
        
        /// <remarks/>
        Residential,
        
        /// <remarks/>
        Commercial,
        
        /// <remarks/>
        Industrial,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Igrss.org/Services/StampDutyCalculator/")]
    public partial class ValuationReport {
        
        private string distCodeField;
        
        private string talukaCodeField;
        
        private string villageIDField;
        
        private string surveyNoField;
        
        private double depreciationField;
        
        private double netPriceField;
        
        private double priceOfLandField;
        
        private double specialDeductionField;
        
        private double valuationOfPropertyField;
        
        private double stampDutyField;
        
        private double developmentExpensesField;
        
        private double otherExpenseField;
        
        private double areaOfLandField;
        
        private double plinthAreaOfConstructionField;
        
        private ConstructionTypes typeOfConstructionField;
        
        private double sorExpensesField;
        
        private double estimatedPriceField;
        
        private double compoundWallField;
        
        private double derangeField;
        
        private double internalRoadField;
        
        private double compoundLightField;
        
        private double supervisionFeesField;
        
        private double connectionFeesField;
        
        private double architectFeesField;
        
        private double electrificationExpensesField;
        
        private double liftExpensesField;
        
        private double lifeInYearsField;
        
        private double constructionExpenseField;
        
        private double approxPriceField;
        
        /// <remarks/>
        public string DistCode {
            get {
                return this.distCodeField;
            }
            set {
                this.distCodeField = value;
            }
        }
        
        /// <remarks/>
        public string TalukaCode {
            get {
                return this.talukaCodeField;
            }
            set {
                this.talukaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string VillageID {
            get {
                return this.villageIDField;
            }
            set {
                this.villageIDField = value;
            }
        }
        
        /// <remarks/>
        public string SurveyNo {
            get {
                return this.surveyNoField;
            }
            set {
                this.surveyNoField = value;
            }
        }
        
        /// <remarks/>
        public double Depreciation {
            get {
                return this.depreciationField;
            }
            set {
                this.depreciationField = value;
            }
        }
        
        /// <remarks/>
        public double NetPrice {
            get {
                return this.netPriceField;
            }
            set {
                this.netPriceField = value;
            }
        }
        
        /// <remarks/>
        public double PriceOfLand {
            get {
                return this.priceOfLandField;
            }
            set {
                this.priceOfLandField = value;
            }
        }
        
        /// <remarks/>
        public double SpecialDeduction {
            get {
                return this.specialDeductionField;
            }
            set {
                this.specialDeductionField = value;
            }
        }
        
        /// <remarks/>
        public double ValuationOfProperty {
            get {
                return this.valuationOfPropertyField;
            }
            set {
                this.valuationOfPropertyField = value;
            }
        }
        
        /// <remarks/>
        public double StampDuty {
            get {
                return this.stampDutyField;
            }
            set {
                this.stampDutyField = value;
            }
        }
        
        /// <remarks/>
        public double DevelopmentExpenses {
            get {
                return this.developmentExpensesField;
            }
            set {
                this.developmentExpensesField = value;
            }
        }
        
        /// <remarks/>
        public double OtherExpense {
            get {
                return this.otherExpenseField;
            }
            set {
                this.otherExpenseField = value;
            }
        }
        
        /// <remarks/>
        public double AreaOfLand {
            get {
                return this.areaOfLandField;
            }
            set {
                this.areaOfLandField = value;
            }
        }
        
        /// <remarks/>
        public double PlinthAreaOfConstruction {
            get {
                return this.plinthAreaOfConstructionField;
            }
            set {
                this.plinthAreaOfConstructionField = value;
            }
        }
        
        /// <remarks/>
        public ConstructionTypes TypeOfConstruction {
            get {
                return this.typeOfConstructionField;
            }
            set {
                this.typeOfConstructionField = value;
            }
        }
        
        /// <remarks/>
        public double SorExpenses {
            get {
                return this.sorExpensesField;
            }
            set {
                this.sorExpensesField = value;
            }
        }
        
        /// <remarks/>
        public double EstimatedPrice {
            get {
                return this.estimatedPriceField;
            }
            set {
                this.estimatedPriceField = value;
            }
        }
        
        /// <remarks/>
        public double CompoundWall {
            get {
                return this.compoundWallField;
            }
            set {
                this.compoundWallField = value;
            }
        }
        
        /// <remarks/>
        public double Derange {
            get {
                return this.derangeField;
            }
            set {
                this.derangeField = value;
            }
        }
        
        /// <remarks/>
        public double InternalRoad {
            get {
                return this.internalRoadField;
            }
            set {
                this.internalRoadField = value;
            }
        }
        
        /// <remarks/>
        public double CompoundLight {
            get {
                return this.compoundLightField;
            }
            set {
                this.compoundLightField = value;
            }
        }
        
        /// <remarks/>
        public double SupervisionFees {
            get {
                return this.supervisionFeesField;
            }
            set {
                this.supervisionFeesField = value;
            }
        }
        
        /// <remarks/>
        public double ConnectionFees {
            get {
                return this.connectionFeesField;
            }
            set {
                this.connectionFeesField = value;
            }
        }
        
        /// <remarks/>
        public double ArchitectFees {
            get {
                return this.architectFeesField;
            }
            set {
                this.architectFeesField = value;
            }
        }
        
        /// <remarks/>
        public double ElectrificationExpenses {
            get {
                return this.electrificationExpensesField;
            }
            set {
                this.electrificationExpensesField = value;
            }
        }
        
        /// <remarks/>
        public double LiftExpenses {
            get {
                return this.liftExpensesField;
            }
            set {
                this.liftExpensesField = value;
            }
        }
        
        /// <remarks/>
        public double LifeInYears {
            get {
                return this.lifeInYearsField;
            }
            set {
                this.lifeInYearsField = value;
            }
        }
        
        /// <remarks/>
        public double ConstructionExpense {
            get {
                return this.constructionExpenseField;
            }
            set {
                this.constructionExpenseField = value;
            }
        }
        
        /// <remarks/>
        public double ApproxPrice {
            get {
                return this.approxPriceField;
            }
            set {
                this.approxPriceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CalculateStampDutyCompletedEventHandler(object sender, CalculateStampDutyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateStampDutyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateStampDutyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ValuationReport Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ValuationReport)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591