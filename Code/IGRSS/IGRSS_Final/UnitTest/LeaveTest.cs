//The following code was generated by Microsoft Visual Studio 2005.
//The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using LeaveRegister = IGRSS.DataAccessLayer.Leave.LeaveRegisterDataTable;
using System.Text;
using System.Collections.Generic;
using IGRSS.BusinessLogicLayer;
using IGRSS.BusinessObjects;
using IGRSS.DataAccessLayer;
using System.Data;
namespace UnitTest
{
    /// <summary>
    ///This is a test class for IGRSS.BusinessLogicLayer.Leave and is intended
    ///to contain all IGRSS.BusinessLogicLayer.Leave Unit Tests
    ///</summary>
    [TestClass()]
    public class LeaveTest
    {
         private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        [ClassInitialize()]
        public static void MyClassInitialize(TestContext testContext)
        {
        }
        
        //Use ClassCleanup to run code after all tests in a class have run
        //
        [ClassCleanup()]
        public static void MyClassCleanup()
        {
        }
        
        //Use TestInitialize to run code before running each test
        //
        [TestInitialize()]
        public void MyTestInitialize()
        {
        }
        
        //Use TestCleanup to run code after each test has run

        [TestCleanup()]
        public void MyTestCleanup()
        {
        }
        
        #endregion


        /// <summary>
        ///A test for AddLeaveDetails (FormViewParameter)
        ///</summary>
        [TestMethod()]
        public void AddLeaveDetailsTest()
        {
            
            IGRSS.BusinessLogicLayer.Leave target = new IGRSS.BusinessLogicLayer.Leave();
            FormViewParameter Parameter =new FormViewParameter(); // TODO: Initialize to an appropriate value
            IGRSS.DataAccessLayer.Leave.LeaveRegisterDataTable Dt = new IGRSS.DataAccessLayer.Leave.LeaveRegisterDataTable();
            DataRow dr = Dt.NewRow();
            dr["EmployeeID"] = new Guid("fc9b70d5-9344-4059-87f2-a9d082601c76");
            dr["LeaveType"] = new Guid("9ec9c473-dd5d-47af-885a-59a65a5bb651"); 
            dr["LeaveFrom"] = DateTime.Now;
            dr["LeaveTo"] = DateTime.Now;
            dr["Reason"] ="just not filing well";
            dr["ResumedDutyOn"] = DateTime.Now.AddDays(5);
            Parameter.Values = Dt.Rows[0];
            Dt.Rows.Add(dr);
            bool expected = true;
            Assert.AreEqual(expected, target.AddLeaveDetails(Parameter), "IGRSS.BusinessLogicLayer.Leave.AddLeaveDetails did not return the expected value." +
                    "");
        }

        /// <summary>
        ///A test for GetLeavedetails ()
        ///</summary>
        [TestMethod()]
        public void GetLeavedetailsTest()
        {
            IGRSS.BusinessLogicLayer.Leave target = new IGRSS.BusinessLogicLayer.Leave();
            Assert.IsInstanceOfType(target.GetLeavedetails(),typeof(IGRSS.DataAccessLayer.Leave.LeaveRegisterDataTable),"IGRSS.BusinessLogicLayer.Leave.LeaveRegisterDataTable() return wrong type of data");
        }

        ///// <summary>
        /////A test for GetLeavedetailsByEmpId (Guid)
        /////</summary>
        //[TestMethod()]
        //public void GetLeavedetailsByEmpIdTest()
        //{
        //    IGRSS.BusinessLogicLayer.Leave target = new IGRSS.BusinessLogicLayer.Leave();

        //    //Guid EmployeeID =new Guid();
        //    //     EmployeeID=0ce50acf-494c-49a6-83ec-0e149c0c3ee8;
    
        //    LeaveTable actual;

        //    actual = target.GetLeavedetailsByEmpId(Guid.NewGuid(0ce50acf-494c-49a6-83ec-0e149c0c3ee8));

        //    Assert.AreEqual(LeaveTable, actual, "IGRSS.BusinessLogicLayer.Leave.GetLeavedetailsByEmpId did not return the expected" +
        //            " value.");
        //    Assert.Inconclusive("Verify the correctness of this test method.");
        //}

        /// <summary>
        ///A test for GetLeavedetailsByEmployeeName (string)
        ///</summary>
        [TestMethod()]
        public void GetLeavedetailsByEmployeeNameTest()
        {
            IGRSS.BusinessLogicLayer.Leave target = new IGRSS.BusinessLogicLayer.Leave();
            string EmployeeName ="ddd";
            Assert.IsInstanceOfType(target.GetLeavedetailsByEmployeeName(EmployeeName),
                typeof(IGRSS.DataAccessLayer.Leave.LeaveRegisterDataTable),
                "IGRSS.BusinessLogicLayer.Leave.LeaveRegisterDataTable() return wrong type of data");
            
        }

        /// <summary>
        ///A test for GetLeavedetailsByEmployeeNo (string)
        ///</summary>
        [TestMethod()]
        public void GetLeavedetailsByEmployeeNoTest()
        {
            IGRSS.BusinessLogicLayer.Leave target = new IGRSS.BusinessLogicLayer.Leave();
            string EmployeeNo="890"; // TODO: Initialize to an appropriate value
            Assert.IsInstanceOfType(target.GetLeavedetailsByEmployeeNo(EmployeeNo),
            typeof(IGRSS.DataAccessLayer.Leave.LeaveRegisterDataTable),
            "IGRSS.BusinessLogicLayer.Leave.LeaveRegisterDataTable() return wrong type of data");
        }

        ///// <summary>
        /////A test for GetLeavedetailsByLeaveRegID (Guid)
        /////</summary>
        //[TestMethod()]
        //public void GetLeavedetailsByLeaveRegIDTest()
        //{
        //    Leave target = new Leave();

        //    Guid LeaveRegID = new Guid(); // TODO: Initialize to an appropriate value

        //    Leave.LeaveRegisterDataTable expected = null;
        //    Leave.LeaveRegisterDataTable actual;

        //    actual = target.GetLeavedetailsByLeaveRegID(LeaveRegID);

        //    Assert.AreEqual(expected, actual, "IGRSS.BusinessLogicLayer.Leave.GetLeavedetailsByLeaveRegID did not return the exp" +
        //            "ected value.");
        //    Assert.Inconclusive("Verify the correctness of this test method.");
        //}

        ///// <summary>
        /////A test for GetRow ()
        /////</summary>
        //[TestMethod()]
        //public void GetRowTest()
        //{
        //    DataRow expected = null;
        //    DataRow actual;

        //    actual = IGRSS.BusinessLogicLayer.Leave.GetRow();

        //    Assert.AreEqual(expected, actual, "IGRSS.BusinessLogicLayer.Leave.GetRow did not return the expected value.");
        //    Assert.Inconclusive("Verify the correctness of this test method.");
        //}

        ///// <summary>
        /////A test for UpdateLeaveDetails (FormViewParameter, Guid)
        /////</summary>
        //[TestMethod()]
        //public void UpdateLeaveDetailsTest()
        //{
        //    Leave target = new Leave();

        //    FormViewParameter Parameter = null; // TODO: Initialize to an appropriate value

        //    Guid LeaveRegID = new Guid(); // TODO: Initialize to an appropriate value

        //    bool expected = false;
        //    bool actual;

        //    actual = target.UpdateLeaveDetails(Parameter, LeaveRegID);

        //    Assert.AreEqual(expected, actual, "IGRSS.BusinessLogicLayer.Leave.UpdateLeaveDetails did not return the expected val" +
        //            "ue.");
        //    Assert.Inconclusive("Verify the correctness of this test method.");
        //}

    }


}
