// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using IGRSS.BusinessLogicLayer;
using System.Data;
using IGRSS.DataAccessLayer;
namespace IgrssTest
{
    /// <summary>
    ///This is a test class for IGRSS.BusinessLogicLayer.LicenseMasterBLL and is intended
    ///to contain all IGRSS.BusinessLogicLayer.LicenseMasterBLL Unit Tests
    ///</summary>
    [TestClass()]
    public class LicenseMasterBLLTest
    {


        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for CancelVendorLicenses (string)
        ///</summary>
        [TestMethod()]
        public void CancelVendorLicensesTest()
        {
            IGRSS.BusinessLogicLayer.LicenseMasterBLL target = new IGRSS.BusinessLogicLayer.LicenseMasterBLL();
            string LicenseNo ="pop345"; // TODO: Initialize to an appropriate value
            Assert.AreEqual(true, target.CancelVendorLicenses(LicenseNo), "IGRSS.BusinessLogicLayer.LicenseMasterBLL.CancelVendorLicenses did not return the" +
                    " expected value.");
       }

        /// <summary>
        ///A test for DeleteLicenseDetails (Guid)
        ///</summary>
        [TestMethod()]
        public void DeleteLicenseDetailsTest()
        {
            IGRSS.BusinessLogicLayer.LicenseMasterBLL target = new IGRSS.BusinessLogicLayer.LicenseMasterBLL();
            Guid LicenseApplicationId = new Guid("0f358fd5-f296-43e7-a562-13a33b2367b7"); // TODO: Initialize to an appropriate value
            Assert.AreEqual(true, target.DeleteLicenseDetails(LicenseApplicationId), "IGRSS.BusinessLogicLayer.LicenseMasterBLL.DeleteLicenseDetails did not return the" +    " expected value.");
         }

        /// <summary>
        ///A test for GetDataByLicenseNo (string)
        ///</summary>
        [TestMethod()]
        public void GetDataByLicenseNoTest()
        {
            IGRSS.BusinessLogicLayer.LicenseMasterBLL target = new IGRSS.BusinessLogicLayer.LicenseMasterBLL();
            string LicenseNo ="pop345"; // TODO: Initialize to an appropriate value
         //   Assert.IsInstanceOfType(target.GetDataByLicenseNo(LicenseNo),typeof(IGRSS.DataAccessLayer.LicenseMaster.LicenseMasterDataTable),"IGRSS.BusinessLogicLayer.LicenseMasterBLL.GetDataByLicenseNo did not return the e" +   "xpected value.");
        }

        /// <summary>
        ///A test for GetLicensedetailByLicenseAppID (Guid)
        ///</summary>
        [TestMethod()]
        public void GetLicensedetailByLicenseAppIDTest()
        {
            IGRSS.BusinessLogicLayer.LicenseMasterBLL target = new IGRSS.BusinessLogicLayer.LicenseMasterBLL();
            Guid LicenseApplicationId = new Guid("0f358fd5-f296-43e7-a562-13a33b2367b7"); // TODO: Initialize to an appropriate value
            Assert.IsInstanceOfType(target.GetLicensedetailByLicenseAppID(LicenseApplicationId), typeof(IGRSS.DataAccessLayer.LicenseMaster.LicenseMasterDataTable), "IGRSS.BusinessLogicLayer.LicenseMasterBLL.GetDataByLicenseNo did not return the e" +
                    "xpected value.");
        }

        /// <summary>
        ///A test for GetLicenses ()
        ///</summary>
        [TestMethod()]
        public void GetLicensesTest()
        {
            IGRSS.BusinessLogicLayer.LicenseMasterBLL target = new IGRSS.BusinessLogicLayer.LicenseMasterBLL();
            Assert.IsInstanceOfType(target.GetLicenses(), typeof(IGRSS.DataAccessLayer.LicenseMaster.LicenseMasterDataTable), "IGRSS.BusinessLogicLayer.LicenseMasterBLL.GetDataByLicenseNo did not return the e" +
                   "xpected value.");
    
        }

        ///// <summary>
        /////A test for IssueLicense (Guid, string, DateTime, DateTime, DateTime, string)
        /////</summary>
        //[TestMethod()]
        //public void IssueLicenseTest()
        //{
        //    LicenseMasterBLL target = new LicenseMasterBLL();

        //    Guid LicenseApplicationId = new Guid(); // TODO: Initialize to an appropriate value

        //    string LicenseNo = null; // TODO: Initialize to an appropriate value

        //    DateTime IssuedDate = new DateTime(); // TODO: Initialize to an appropriate value

        //    DateTime EffectiveDate = new DateTime(); // TODO: Initialize to an appropriate value

        //    DateTime ExpiryDate = new DateTime(); // TODO: Initialize to an appropriate value

        //    string Status = null; // TODO: Initialize to an appropriate value

        //    target.IssueLicense(LicenseApplicationId, LicenseNo, IssuedDate, EffectiveDate, ExpiryDate, Status);

        //    Assert.Inconclusive("A method that does not return a value cannot be verified.");
        //}

        

        ///// <summary>
        /////A test for RenewVendorLicenses (DateTime, DateTime, DateTime, Guid)
        /////</summary>
        //[TestMethod()]
        //public void RenewVendorLicensesTest()
        //{
        //    LicenseMasterBLL target = new LicenseMasterBLL();

        //    DateTime RenewedDate = new DateTime(); // TODO: Initialize to an appropriate value

        //    DateTime EffectiveDate = new DateTime(); // TODO: Initialize to an appropriate value

        //    DateTime ExpiryDate = new DateTime(); // TODO: Initialize to an appropriate value

        //    Guid LicenseApplicationId = new Guid(); // TODO: Initialize to an appropriate value

        //    bool expected = false;
        //    bool actual;

        //    actual = target.RenewVendorLicenses(RenewedDate, EffectiveDate, ExpiryDate, LicenseApplicationId);

        //    Assert.AreEqual(expected, actual, "IGRSS.BusinessLogicLayer.LicenseMasterBLL.RenewVendorLicenses did not return the " +
        //            "expected value.");
        //    Assert.Inconclusive("Verify the correctness of this test method.");
        //}

    }


}
